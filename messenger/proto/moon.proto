syntax = "proto3";
package messenger;

import "raftpb/raft.proto";
import "node_info.proto";
import "common.proto";
import "cluster_info.proto";
import "bucket_info.proto";

option go_package = "ecos/edge-node/moon";

service Moon {
  rpc SendRaftMessage (raftpb.Message) returns (raftpb.Message) {}
  rpc AddNodeToGroup (NodeInfo) returns (AddNodeReply) {}
  rpc GetClusterInfo(GetClusterInfoRequest) returns (ClusterInfo) {};
  // ProposeInfo 用于向集群中提交一个 Info 共识，该 Info 将会在集群所有节点上同步
  // 目前可以提交的 Info: NodeInfo, BucketInfo
  rpc ProposeInfo(ProposeInfoRequest) returns (ProposeInfoReply) {};
  // GetInfo 从对应 InfoStorage 中取得 Info
  rpc GetInfo(GetInfoRequest) returns (GetInfoReply) {};
}

message AddNodeReply {
  Result result = 1;
  NodeInfo leaderInfo = 2;
}

message GetClusterInfoRequest {
  uint64 term = 1;
}

message ProposeInfoRequest {
  Head head = 1;
  enum Operate {
    ADD = 0;
    UPDATE = 1;
    DELETE = 2;
  }
  Operate operate = 2;
  oneof info{
    NodeInfo node_info = 3;
    BucketInfo bucket_info = 4;
    ClusterInfo cluster_info = 5;
  }
}

message ProposeInfoReply {
  Result result = 1;
  NodeInfo leaderInfo = 2; // if this node is not leader, it will return leader info
}

message GetInfoRequest {
  Head head = 1;
  enum InfoType {
    NODE_INFO = 0;
    BUCKET_INFO = 1;
  }
  InfoType info_type = 2;
  string info_id = 3;
}

message GetInfoReply {
  Result result = 1;
  oneof info {
    NodeInfo node_info = 2;
    BucketInfo bucket_info = 3;
  }
}